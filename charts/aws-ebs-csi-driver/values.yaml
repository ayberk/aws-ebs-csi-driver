# Default values for aws-ebs-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: k8s.gcr.io/provider-aws/aws-ebs-csi-driver
  tag: "v0.8.0"
  pullPolicy: IfNotPresent

sidecars:
  provisionerImage:
    repository: raspbernetes/csi-external-provisioner
    tag: "1.6.0"
  attacherImage:
    repository: raspbernetes/csi-external-attacher
    tag: "2.2.0"
  snapshotterImage:
    repository: raspbernetes/csi-external-snapshotter
    tag: "2.1.1"
  livenessProbeImage:
    repository: k8s.gcr.io/sig-storage/livenessprobe
    tag: "v2.1.0"
  resizerImage:
    repository: raspbernetes/csi-external-resizer
    tag: "0.5.0"
  nodeDriverRegistrarImage:
    repository: raspbernetes/csi-node-driver-registrar
    tag: "1.3.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

# True if enable volume scheduling for dynamic volume provisioning
enableVolumeScheduling: false

# True if enable volume resizing
enableVolumeResizing: false

# True if enable volume snapshot
enableVolumeSnapshot: false

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerateAllTaints: true
tolerations: []

affinity: {}

# Extra volume tags to attach to each dynamically provisioned volume.
# ---
# extraVolumeTags:
#   key1: value1
#   key2: value2
extraVolumeTags: {}

# If set, add pv/pvc metadata to plugin create requests as parameters.
extraCreateMetadata: false

# ID of the Kubernetes cluster used for tagging provisioned EBS volumes (optional).
k8sTagClusterId: ""

# AWS region to use. If not specified then the region will be looked up via the AWS EC2 metadata
# service.
# ---
# region: us-east-1
region: ""

node:
  podAnnotations: {}
  tolerateAllTaints: true
  tolerations: []

serviceAccount:
  controller:
    annotations: {}
  snapshot:
    annotations: {}
